#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_slava121', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('db') {
                         sh 'docker build -t slava121/k8s-wordsmith-db . '
                dir ('words') {
                         sh 'docker build -t slava121/k8s-wordsmith-api . '
                dir ('web') {
                         sh 'docker build -t slava121/k8s-wordsmith-web . '
                    
                }         
            }
        } 
        stage("docker push") {
            steps {
                 echo " ============== start pushing image =================="
                 sh '''
                 docker push slava121/k8s-wordsmith-db
                 '''
                 sh '''
                 docker push slava121/k8s-wordsmith-api 
                 '''
                 sh '''
                 docker push slava121/k8s-wordsmith-web
                }
            }
        }
    }
